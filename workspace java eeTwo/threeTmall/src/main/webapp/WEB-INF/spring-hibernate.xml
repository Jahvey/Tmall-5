<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="  
http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
http://www.springframework.org/schema/tx   
http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
http://www.springframework.org/schema/aop   
http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
http://www.springframework.org/schema/context    
http://www.springframework.org/schema/context/spring-context-4.1.xsd   
">  
  
    <!-- JNDI(通过Tomcat)方式配置数据源 -->  
    <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> <property name="jndiName" value="${jndiName}"></property> </bean> -->  
      
      
       <!-- 引入属性文件 -->  
    <context:property-placeholder location="classpath:config.properties" />  
    
      
    <!-- 配置数据源  这里class可以使用不同的驱动-->  
    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="url" value="{jdbc_url}" />  
        <property name="username" value="root" />  
        <property name="password" value="123" />
    </bean>  
    
   
    <!-- 配置hibernate session工厂 -->  
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>  
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>  
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>  
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>  
                 <prop key="current_session_context_class">thread</prop>    
                 <prop key="hibernate.connection.driver_class" >${driverClassName}</prop> 
            </props>  
        </property>  
        <property name="mappingDirectoryLocations">  
            <list>  
                <value>classpath:main/java/bean</value>  
            </list>  
        </property>
         <!-- 扫描hibernate注解配置的entity
        <property name="packagesToScan" value="org.andy.work.entity" />  
          -->  
    </bean>  
    
    
  
    <!-- 配置事务管理器 -->  
    <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>    
   <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
 
    <!-- 注解方式配置事物 -->  
   <!-- <tx:annotation-driven  transaction-manager="transactionManager"  proxy-target-class="true" />     
   --> 
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- 配置详细事务处理语义 -->
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />

			<!-- 其他采用默认事务方式 -->
			<tx:method name="*" />

		</tx:attributes>
	</tx:advice>
  <!-- Spring aop事务管理 -->  
    <aop:config>  
        <!-- 配置切入点 -->  
        <aop:pointcut id="transactionPointcut"  
            expression="execution(* org.andy.work.service..*Impl.*(..))" />  
        <!-- 指定在txAdvice切入点应用txAdvice事务增强处理 -->  
        <aop:advisor pointcut-ref="transactionPointcut"  
            advice-ref="transactionAdvice" />  
    </aop:config>
</beans>  